{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\Desktop\\\\Cristian\\\\Visual Studio Code\\\\RickandMorty API\\\\rick-and-morty-api\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Character from \"./components/Character\"; // Importa el componente Character.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]); // Estado para múltiples personajes.\n\n  useEffect(() => {\n    const fetchAllCharacters = async () => {\n      let allCharacters = [];\n      let nextPage = \"https://rickandmortyapi.com/api/character\";\n      try {\n        while (nextPage) {\n          const res = await fetch(nextPage);\n          const data = await res.json();\n          allCharacters = [...allCharacters, ...data.results]; // Agregar nuevos personajes\n          nextPage = data.info.next; // Actualizar la URL para la siguiente página\n        }\n        setCharacters(allCharacters); // Guardar todos los personajes en el estado\n      } catch (error) {\n        console.error(\"Error fetching characters:\", error);\n      }\n    };\n    fetchAllCharacters();\n  }, []); // Solo ejecuta una vez al cargar el componente.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Information\",\n      children: /*#__PURE__*/_jsxDEV(Character, {\n        characters: characters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Lpb9AbqKJ07+xuj4aZ1twNw87e0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Character","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","fetchAllCharacters","allCharacters","nextPage","res","fetch","data","json","results","info","next","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/krist/Desktop/Cristian/Visual Studio Code/RickandMorty API/rick-and-morty-api/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Character from \"./components/Character\"; // Importa el componente Character.\n\nfunction App() {\n  const [characters, setCharacters] = useState([]); // Estado para múltiples personajes.\n\n  useEffect(() => {\n    const fetchAllCharacters = async () => {\n      let allCharacters = [];\n      let nextPage = \"https://rickandmortyapi.com/api/character\";\n\n      try {\n        while (nextPage) {\n          const res = await fetch(nextPage);\n          const data = await res.json();\n\n          allCharacters = [...allCharacters, ...data.results]; // Agregar nuevos personajes\n          nextPage = data.info.next; // Actualizar la URL para la siguiente página\n        }\n\n        setCharacters(allCharacters); // Guardar todos los personajes en el estado\n      } catch (error) {\n        console.error(\"Error fetching characters:\", error);\n      }\n    };\n\n    fetchAllCharacters();\n  }, []); // Solo ejecuta una vez al cargar el componente.\n\n  return (\n    <div className=\"App\">\n      <div className=\"Information\">\n        {/* Pasamos los personajes como prop */}\n        <Character characters={characters} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMQ,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAIC,aAAa,GAAG,EAAE;MACtB,IAAIC,QAAQ,GAAG,2CAA2C;MAE1D,IAAI;QACF,OAAOA,QAAQ,EAAE;UACf,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,QAAQ,CAAC;UACjC,MAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;UAE7BL,aAAa,GAAG,CAAC,GAAGA,aAAa,EAAE,GAAGI,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC;UACrDL,QAAQ,GAAGG,IAAI,CAACG,IAAI,CAACC,IAAI,CAAC,CAAC;QAC7B;QAEAV,aAAa,CAACE,aAAa,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDV,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBlB,OAAA;MAAKiB,SAAS,EAAC,aAAa;MAAAC,QAAA,eAE1BlB,OAAA,CAACF,SAAS;QAACK,UAAU,EAAEA;MAAW;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CAlCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}