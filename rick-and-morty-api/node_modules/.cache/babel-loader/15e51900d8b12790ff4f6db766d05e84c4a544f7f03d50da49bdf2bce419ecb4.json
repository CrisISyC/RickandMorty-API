{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\Desktop\\\\Cristian\\\\Visual Studio Code\\\\RickandMorty API\\\\rick-and-morty-api\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Characters from \"./components/Character\";\nimport CharacterDetail from \"./components/CharacterDetail\";\nimport UnderConstruction from \"./components/UnderConstruction\";\nimport Pagination from \"./components/Pagination\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]); // Todos los personajes de la API\n  const [filteredCharacters, setFilteredCharacters] = useState([]); // Personajes filtrados\n  const [paginatedCharacters, setPaginatedCharacters] = useState([]); // Personajes en pantalla\n  const [searchTerm, setSearchTerm] = useState(\"\"); // Estado de búsqueda\n  const [currentPage, setCurrentPage] = useState(1); // Página actual\n\n  useEffect(() => {\n    const fetchAllCharacters = async () => {\n      try {\n        let allData = [];\n        let page = 1;\n        let totalPages = 1;\n        while (page <= totalPages) {\n          const res = await fetch(`https://rickandmortyapi.com/api/character?page=${page}`);\n          const data = await res.json();\n          allData = [...allData, ...data.results];\n          totalPages = data.info.pages;\n          page++;\n        }\n        setCharacters(allData);\n        setFilteredCharacters(allData);\n      } catch (error) {\n        console.error(\"Error fetching characters:\", error);\n      }\n    };\n    fetchAllCharacters();\n  }, []);\n\n  // Filtrar personajes según la búsqueda\n  useEffect(() => {\n    const filtered = characters.filter(character => character.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    setFilteredCharacters(filtered);\n    setCurrentPage(1); // Reiniciar a la primera página cuando se realiza una búsqueda\n  }, [searchTerm, characters]);\n\n  // Paginación: actualizar `paginatedCharacters` cuando cambian `filteredCharacters` o `currentPage`\n  useEffect(() => {\n    const startIndex = (currentPage - 1) * 20;\n    const endIndex = startIndex + 20;\n    setPaginatedCharacters(filteredCharacters.slice(startIndex, endIndex));\n  }, [filteredCharacters, currentPage]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"app-title-container\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"app-title\",\n                children: \"The Rick and Morty App\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-bar-container\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Buscar personaje...\",\n                value: searchTerm,\n                onChange: e => setSearchTerm(e.target.value),\n                className: \"search-bar\",\n                autoCorrect: \"off\",\n                spellCheck: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"results-count\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [filteredCharacters.length, \" results found\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Characters, {\n              characters: paginatedCharacters\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n              filteredCharacters: filteredCharacters,\n              setPaginatedCharacters: setPaginatedCharacters\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/character/:id\",\n          element: /*#__PURE__*/_jsxDEV(CharacterDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/episodes\",\n          element: /*#__PURE__*/_jsxDEV(UnderConstruction, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/locations\",\n          element: /*#__PURE__*/_jsxDEV(UnderConstruction, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bK1kMfsPq6dxPg3fFik9L4Lk0iM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Router","Routes","Route","Header","Characters","CharacterDetail","UnderConstruction","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","characters","setCharacters","filteredCharacters","setFilteredCharacters","paginatedCharacters","setPaginatedCharacters","searchTerm","setSearchTerm","currentPage","setCurrentPage","fetchAllCharacters","allData","page","totalPages","res","fetch","data","json","results","info","pages","error","console","filtered","filter","character","name","toLowerCase","includes","startIndex","endIndex","slice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","type","placeholder","value","onChange","e","target","autoCorrect","spellCheck","length","_c","$RefreshReg$"],"sources":["C:/Users/krist/Desktop/Cristian/Visual Studio Code/RickandMorty API/rick-and-morty-api/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Characters from \"./components/Character\";\nimport CharacterDetail from \"./components/CharacterDetail\";\nimport UnderConstruction from \"./components/UnderConstruction\";\nimport Pagination from \"./components/Pagination\";\n\nfunction App() {\n  const [characters, setCharacters] = useState([]); // Todos los personajes de la API\n  const [filteredCharacters, setFilteredCharacters] = useState([]); // Personajes filtrados\n  const [paginatedCharacters, setPaginatedCharacters] = useState([]); // Personajes en pantalla\n  const [searchTerm, setSearchTerm] = useState(\"\"); // Estado de búsqueda\n  const [currentPage, setCurrentPage] = useState(1); // Página actual\n  \n\n  useEffect(() => {\n    const fetchAllCharacters = async () => {\n      try {\n        let allData = [];\n        let page = 1;\n        let totalPages = 1;\n\n        while (page <= totalPages) {\n          const res = await fetch(`https://rickandmortyapi.com/api/character?page=${page}`);\n          const data = await res.json();\n\n          allData = [...allData, ...data.results];\n\n          totalPages = data.info.pages;\n          page++;\n        }\n\n        setCharacters(allData);\n        setFilteredCharacters(allData);\n      } catch (error) {\n        console.error(\"Error fetching characters:\", error);\n      }\n    };\n\n    fetchAllCharacters();\n  }, []);\n\n  // Filtrar personajes según la búsqueda\n  useEffect(() => {\n    const filtered = characters.filter((character) =>\n      character.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    setFilteredCharacters(filtered);\n    setCurrentPage(1); // Reiniciar a la primera página cuando se realiza una búsqueda\n  }, [searchTerm, characters]);\n\n  // Paginación: actualizar `paginatedCharacters` cuando cambian `filteredCharacters` o `currentPage`\n  useEffect(() => {\n    const startIndex = (currentPage - 1) * 20;\n    const endIndex = startIndex + 20;\n    setPaginatedCharacters(filteredCharacters.slice(startIndex, endIndex));\n  }, [filteredCharacters, currentPage]);\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <>\n                <div className=\"app-title-container\">\n                  <h1 className=\"app-title\">The Rick and Morty App</h1>\n                </div>\n                <div className=\"search-bar-container\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Buscar personaje...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"search-bar\"\n                    autoCorrect=\"off\"\n                    spellCheck={false}\n                  />\n                </div>\n                <div className=\"results-count\">\n                  <p>{filteredCharacters.length} results found</p>\n                </div>\n                <Characters characters={paginatedCharacters} />\n\n                <Pagination \n                  filteredCharacters={filteredCharacters} \n                  setPaginatedCharacters={setPaginatedCharacters} \n                />\n              </>\n            }\n          />\n          <Route path=\"/character/:id\" element={<CharacterDetail />} />\n          <Route path=\"/episodes\" element={<UnderConstruction />} />\n          <Route path=\"/locations\" element={<UnderConstruction />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,iBAAiB,MAAM,gCAAgC;AAC9D,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACmB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClE,MAAM,CAACqB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpE,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAGnDC,SAAS,CAAC,MAAM;IACd,MAAM0B,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,IAAIC,OAAO,GAAG,EAAE;QAChB,IAAIC,IAAI,GAAG,CAAC;QACZ,IAAIC,UAAU,GAAG,CAAC;QAElB,OAAOD,IAAI,IAAIC,UAAU,EAAE;UACzB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kDAAkDH,IAAI,EAAE,CAAC;UACjF,MAAMI,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;UAE7BN,OAAO,GAAG,CAAC,GAAGA,OAAO,EAAE,GAAGK,IAAI,CAACE,OAAO,CAAC;UAEvCL,UAAU,GAAGG,IAAI,CAACG,IAAI,CAACC,KAAK;UAC5BR,IAAI,EAAE;QACR;QAEAX,aAAa,CAACU,OAAO,CAAC;QACtBR,qBAAqB,CAACQ,OAAO,CAAC;MAChC,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDX,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA1B,SAAS,CAAC,MAAM;IACd,MAAMuC,QAAQ,GAAGvB,UAAU,CAACwB,MAAM,CAAEC,SAAS,IAC3CA,SAAS,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACtB,UAAU,CAACqB,WAAW,CAAC,CAAC,CAChE,CAAC;IAEDxB,qBAAqB,CAACoB,QAAQ,CAAC;IAC/Bd,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,EAAE,CAACH,UAAU,EAAEN,UAAU,CAAC,CAAC;;EAE5B;EACAhB,SAAS,CAAC,MAAM;IACd,MAAM6C,UAAU,GAAG,CAACrB,WAAW,GAAG,CAAC,IAAI,EAAE;IACzC,MAAMsB,QAAQ,GAAGD,UAAU,GAAG,EAAE;IAChCxB,sBAAsB,CAACH,kBAAkB,CAAC6B,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC,CAAC;EACxE,CAAC,EAAE,CAAC5B,kBAAkB,EAAEM,WAAW,CAAC,CAAC;EAGrC,oBACEb,OAAA,CAACT,MAAM;IAAA8C,QAAA,eACLrC,OAAA;MAAKsC,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBrC,OAAA,CAACN,MAAM;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEV1C,OAAA,CAACR,MAAM;QAAA6C,QAAA,gBACLrC,OAAA,CAACP,KAAK;UACJkD,IAAI,EAAC,GAAG;UACRC,OAAO,eACL5C,OAAA,CAAAE,SAAA;YAAAmC,QAAA,gBACErC,OAAA;cAAKsC,SAAS,EAAC,qBAAqB;cAAAD,QAAA,eAClCrC,OAAA;gBAAIsC,SAAS,EAAC,WAAW;gBAAAD,QAAA,EAAC;cAAsB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC,eACN1C,OAAA;cAAKsC,SAAS,EAAC,sBAAsB;cAAAD,QAAA,eACnCrC,OAAA;gBACE6C,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,qBAAqB;gBACjCC,KAAK,EAAEpC,UAAW;gBAClBqC,QAAQ,EAAGC,CAAC,IAAKrC,aAAa,CAACqC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;gBAC/CT,SAAS,EAAC,YAAY;gBACtBa,WAAW,EAAC,KAAK;gBACjBC,UAAU,EAAE;cAAM;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACN1C,OAAA;cAAKsC,SAAS,EAAC,eAAe;cAAAD,QAAA,eAC5BrC,OAAA;gBAAAqC,QAAA,GAAI9B,kBAAkB,CAAC8C,MAAM,EAAC,gBAAc;cAAA;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC,eACN1C,OAAA,CAACL,UAAU;cAACU,UAAU,EAAEI;YAAoB;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAE/C1C,OAAA,CAACF,UAAU;cACTS,kBAAkB,EAAEA,kBAAmB;cACvCG,sBAAsB,EAAEA;YAAuB;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC;UAAA,eACF;QACH;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACF1C,OAAA,CAACP,KAAK;UAACkD,IAAI,EAAC,gBAAgB;UAACC,OAAO,eAAE5C,OAAA,CAACJ,eAAe;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7D1C,OAAA,CAACP,KAAK;UAACkD,IAAI,EAAC,WAAW;UAACC,OAAO,eAAE5C,OAAA,CAACH,iBAAiB;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1D1C,OAAA,CAACP,KAAK;UAACkD,IAAI,EAAC,YAAY;UAACC,OAAO,eAAE5C,OAAA,CAACH,iBAAiB;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACtC,EAAA,CAhGQD,GAAG;AAAAmD,EAAA,GAAHnD,GAAG;AAkGZ,eAAeA,GAAG;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}