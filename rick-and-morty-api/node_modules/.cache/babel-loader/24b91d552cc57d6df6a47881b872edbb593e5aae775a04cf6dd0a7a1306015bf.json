{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\Desktop\\\\Cristian\\\\Visual Studio Code\\\\RickandMorty API\\\\rick-and-morty-api\\\\src\\\\components\\\\Character.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Characters() {\n  _s();\n  const [characters, setCharacters] = useState([]); // Estado para múltiples personajes.\n\n  useEffect(() => {\n    fetch(\"https://rickandmortyapi.com/api/character/1,2,3\") // URL para obtener más personajes.\n    .then(res => res.json()).then(data => {\n      setCharacters(data); // Guardamos los personajes en el estado.\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error); // Manejo de errores.\n    });\n  }, []); // Solo ejecuta una vez al cargar el componente. \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"holis\", characters.length > 0 ?\n    /*#__PURE__*/\n    // Renderiza la lista si hay personajes.\n    _jsxDEV(\"ul\", {\n      children: characters.map(character =>\n      /*#__PURE__*/\n      // Mapea cada personaje.\n      _jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Nombre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), \" \", character.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 58\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Especie:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), \" \", character.species, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 62\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Estado:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), \" \", character.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: character.image,\n          alt: character.name,\n          style: {\n            width: \"100px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 94\n        }, this)]\n      }, character.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando datos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this) // Mensaje mientras se cargan los datos.\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Characters, \"Lpb9AbqKJ07+xuj4aZ1twNw87e0=\");\n_c = Characters;\nexport default Characters;\nvar _c;\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Characters","_s","characters","setCharacters","fetch","then","res","json","data","catch","error","console","children","length","map","character","fileName","_jsxFileName","lineNumber","columnNumber","name","species","status","src","image","alt","style","width","id","_c","$RefreshReg$"],"sources":["C:/Users/krist/Desktop/Cristian/Visual Studio Code/RickandMorty API/rick-and-morty-api/src/components/Character.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Characters(){\r\n  const [characters, setCharacters] = useState([]); // Estado para múltiples personajes.\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://rickandmortyapi.com/api/character/1,2,3\") // URL para obtener más personajes.\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setCharacters(data); // Guardamos los personajes en el estado.\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error); // Manejo de errores.\r\n      });\r\n  }, []); // Solo ejecuta una vez al cargar el componente. \r\n\r\n  return(\r\n    <div>\r\n      holis\r\n        {characters.length > 0 ? ( // Renderiza la lista si hay personajes.\r\n          <ul>\r\n            {characters.map((character) => ( // Mapea cada personaje.\r\n              <li key={character.id}>\r\n                <strong>Nombre:</strong> {character.name}<br />\r\n                <strong>Especie:</strong> {character.species}<br />\r\n                <strong>Estado:</strong> {character.status}<br />\r\n                <img src={character.image} alt={character.name} style={{ width: \"100px\" }} /><br />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>Cargando datos...</p> // Mensaje mientras se cargan los datos.\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Characters;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,UAAUA,CAAA,EAAE;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAElDC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,iDAAiD,CAAC,CAAC;IAAA,CACtDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdL,aAAa,CAACK,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC,CAAC;IAChD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEX,OAAA;IAAAa,QAAA,GAAK,OAED,EAACV,UAAU,CAACW,MAAM,GAAG,CAAC;IAAA;IAAK;IACzBd,OAAA;MAAAa,QAAA,EACGV,UAAU,CAACY,GAAG,CAAEC,SAAS;MAAA;MAAO;MAC/BhB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAQ;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACJ,SAAS,CAACK,IAAI,eAACrB,OAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/CpB,OAAA;UAAAa,QAAA,EAAQ;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACJ,SAAS,CAACM,OAAO,eAACtB,OAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnDpB,OAAA;UAAAa,QAAA,EAAQ;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACJ,SAAS,CAACO,MAAM,eAACvB,OAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjDpB,OAAA;UAAKwB,GAAG,EAAER,SAAS,CAACS,KAAM;UAACC,GAAG,EAAEV,SAAS,CAACK,IAAK;UAACM,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAQ;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAAApB,OAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAJ5EJ,SAAS,CAACa,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKjB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELpB,OAAA;MAAAa,QAAA,EAAG;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;IAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEV;AAAClB,EAAA,CAjCQD,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAmCnB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}