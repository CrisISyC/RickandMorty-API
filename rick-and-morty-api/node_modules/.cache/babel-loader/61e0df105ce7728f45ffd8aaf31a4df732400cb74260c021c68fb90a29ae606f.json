{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\Desktop\\\\Cristian\\\\Visual Studio Code\\\\RickandMorty API\\\\rick-and-morty-api\\\\src\\\\components\\\\Character.jsx\";\nimport React from \"react\";\nimport \"../stylesheets/Character.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Characters({\n  characters\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"characters-container\",\n    children: characters.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image-character\",\n        src: character.image // Usamos los datos del personaje.\n        ,\n        alt: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"name\",\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"species\",\n            children: character.species\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"status\",\n            children: character.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"gender\",\n          children: character.gender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)]\n    }, character.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Characters;\nexport default Characters;\nvar _c;\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Characters","characters","className","children","map","character","src","image","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","species","status","gender","id","_c","$RefreshReg$"],"sources":["C:/Users/krist/Desktop/Cristian/Visual Studio Code/RickandMorty API/rick-and-morty-api/src/components/Character.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"../stylesheets/Character.css\"\r\n\r\nfunction Characters({ characters }) {\r\n  return (\r\n    <div className=\"characters-container\">\r\n      {characters.map((character) => (\r\n        <div key={character.id} className=\"character-container\">\r\n          <img\r\n            className=\"image-character\"\r\n            src={character.image} // Usamos los datos del personaje.\r\n            alt={character.name}\r\n          />\r\n          <div className=\"container-text\">\r\n            <p className=\"name\">{character.name}</p>\r\n            <div className=\"info-row\">\r\n              <p className=\"species\">{character.species}</p>\r\n              <p className=\"status\">{character.status}</p>\r\n            </div>\r\n            <p className=\"gender\">{character.gender}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Characters;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,UAAUA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAClC,oBACEF,OAAA;IAAKG,SAAS,EAAC,sBAAsB;IAAAC,QAAA,EAClCF,UAAU,CAACG,GAAG,CAAEC,SAAS,iBACxBN,OAAA;MAAwBG,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBACrDJ,OAAA;QACEG,SAAS,EAAC,iBAAiB;QAC3BI,GAAG,EAAED,SAAS,CAACE,KAAM,CAAC;QAAA;QACtBC,GAAG,EAAEH,SAAS,CAACI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACFd,OAAA;QAAKG,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BJ,OAAA;UAAGG,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAEE,SAAS,CAACI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxCd,OAAA;UAAKG,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACvBJ,OAAA;YAAGG,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAEE,SAAS,CAACS;UAAO;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9Cd,OAAA;YAAGG,SAAS,EAAC,QAAQ;YAAAC,QAAA,EAAEE,SAAS,CAACU;UAAM;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eACNd,OAAA;UAAGG,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAEE,SAAS,CAACW;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA,GAbER,SAAS,CAACY,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcjB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACK,EAAA,GAtBQlB,UAAU;AAwBnB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}