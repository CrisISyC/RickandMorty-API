{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\Desktop\\\\Cristian\\\\Visual Studio Code\\\\RickandMorty API\\\\rick-and-morty-api\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Character from \"./components/Character\"; // Importa el componente Character.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]); // Estado para múltiples personajes.\n\n  useEffect(() => {\n    const fetchCharacters = async () => {\n      try {\n        const res = await fetch(\"https://rickandmortyapi.com/api/character/1,2,3\"); // Múltiples IDs\n        const data = await res.json();\n        setCharacters(data); // Ya es un array cuando se solicitan varios\n      } catch (error) {\n        console.error(\"Error fetching characters:\", error);\n      }\n    };\n    fetchCharacters();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Information\",\n      children: /*#__PURE__*/_jsxDEV(Character, {\n        characters: characters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Lpb9AbqKJ07+xuj4aZ1twNw87e0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Character","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","fetchCharacters","res","fetch","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/krist/Desktop/Cristian/Visual Studio Code/RickandMorty API/rick-and-morty-api/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Character from \"./components/Character\"; // Importa el componente Character.\n\nfunction App() {\n  const [characters, setCharacters] = useState([]); // Estado para múltiples personajes.\n\n  useEffect(() => {\n    const fetchCharacters = async () => {\n      try {\n        const res = await fetch(\"https://rickandmortyapi.com/api/character/1,2,3\"); // Múltiples IDs\n        const data = await res.json();\n        setCharacters(data); // Ya es un array cuando se solicitan varios\n      } catch (error) {\n        console.error(\"Error fetching characters:\", error);\n      }\n    };\n  \n    fetchCharacters();\n  }, []);\n  \n  \n  return (\n    <div className=\"App\">\n      <div className=\"Information\">\n        {/* Pasamos los personajes como prop */}\n        <Character characters={characters} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iDAAiD,CAAC,CAAC,CAAC;QAC5E,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7BL,aAAa,CAACI,IAAI,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDL,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEL,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBb,OAAA;MAAKY,SAAS,EAAC,aAAa;MAAAC,QAAA,eAE1Bb,OAAA,CAACF,SAAS;QAACK,UAAU,EAAEA;MAAW;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACf,EAAA,CA1BQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}