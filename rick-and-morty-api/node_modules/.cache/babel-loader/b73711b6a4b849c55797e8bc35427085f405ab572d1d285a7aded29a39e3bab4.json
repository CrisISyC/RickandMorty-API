{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\Desktop\\\\Cristian\\\\Visual Studio Code\\\\RickandMorty API\\\\rick-and-morty-api\\\\src\\\\components\\\\Pagination.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = ({\n  filteredCharacters,\n  setPaginatedCharacters\n}) => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    const startIndex = (currentPage - 1) * 20;\n    const endIndex = startIndex + 20;\n    setPaginatedCharacters(filteredCharacters.slice(startIndex, endIndex));\n  }, [filteredCharacters, currentPage, setPaginatedCharacters]);\n  const totalPages = Math.ceil(filteredCharacters.length / 20);\n  const handlePageChange = newPage => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-pagination\",\n      onClick: () => handlePageChange(currentPage - 1),\n      disabled: currentPage === 1,\n      children: \"Before\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"span-pagination\",\n      children: [\"Page \", currentPage, \" of \", totalPages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-pagination\",\n      onClick: () => handlePageChange(currentPage + 1),\n      disabled: currentPage >= totalPages,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Pagination, \"GDYsIxij9y/ZFL42bMqqthZmeP4=\");\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Pagination","filteredCharacters","setPaginatedCharacters","_s","currentPage","setCurrentPage","startIndex","endIndex","slice","totalPages","Math","ceil","length","handlePageChange","newPage","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/krist/Desktop/Cristian/Visual Studio Code/RickandMorty API/rick-and-morty-api/src/components/Pagination.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Pagination = ({ filteredCharacters, setPaginatedCharacters }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const startIndex = (currentPage - 1) * 20;\r\n    const endIndex = startIndex + 20;\r\n    setPaginatedCharacters(filteredCharacters.slice(startIndex, endIndex));\r\n  }, [filteredCharacters, currentPage, setPaginatedCharacters]);\r\n\r\n  const totalPages = Math.ceil(filteredCharacters.length / 20);\r\n\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage >= 1 && newPage <= totalPages) {\r\n      setCurrentPage(newPage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <button\r\n        className=\"button-pagination\"\r\n        onClick={() => handlePageChange(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n      >\r\n        Before\r\n      </button>\r\n      <span className=\"span-pagination\">\r\n        Page {currentPage} of {totalPages}\r\n      </span>\r\n      <button\r\n        className=\"button-pagination\"\r\n        onClick={() => handlePageChange(currentPage + 1)}\r\n        disabled={currentPage >= totalPages}\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAC;EAAEC,kBAAkB;EAAEC;AAAuB,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,CAACF,WAAW,GAAG,CAAC,IAAI,EAAE;IACzC,MAAMG,QAAQ,GAAGD,UAAU,GAAG,EAAE;IAChCJ,sBAAsB,CAACD,kBAAkB,CAACO,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC,CAAC;EACxE,CAAC,EAAE,CAACN,kBAAkB,EAAEG,WAAW,EAAEF,sBAAsB,CAAC,CAAC;EAE7D,MAAMO,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACV,kBAAkB,CAACW,MAAM,GAAG,EAAE,CAAC;EAE5D,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;IACpC,IAAIA,OAAO,IAAI,CAAC,IAAIA,OAAO,IAAIL,UAAU,EAAE;MACzCJ,cAAc,CAACS,OAAO,CAAC;IACzB;EACF,CAAC;EAED,oBACEf,OAAA;IAAKgB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBjB,OAAA;MACEgB,SAAS,EAAC,mBAAmB;MAC7BE,OAAO,EAAEA,CAAA,KAAMJ,gBAAgB,CAACT,WAAW,GAAG,CAAC,CAAE;MACjDc,QAAQ,EAAEd,WAAW,KAAK,CAAE;MAAAY,QAAA,EAC7B;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTvB,OAAA;MAAMgB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAAC,OAC3B,EAACZ,WAAW,EAAC,MAAI,EAACK,UAAU;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACPvB,OAAA;MACEgB,SAAS,EAAC,mBAAmB;MAC7BE,OAAO,EAAEA,CAAA,KAAMJ,gBAAgB,CAACT,WAAW,GAAG,CAAC,CAAE;MACjDc,QAAQ,EAAEd,WAAW,IAAIK,UAAW;MAAAO,QAAA,EACrC;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtCIH,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}