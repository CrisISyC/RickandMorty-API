{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\Desktop\\\\Cristian\\\\Visual Studio Code\\\\RickandMorty API\\\\rick-and-morty-api\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Home from \"./pages/Home\";\nimport CharacterDetail from \"./pages/CharacterDetail\";\nimport UnderConstruction from \"./components/UnderConstruction\";\n\n/**\r\n * Componente principal de la aplicación.\r\n * Administra las rutas y la obtención de datos de la API de Rick and Morty.\r\n * @returns {JSX.Element} Estructura de la aplicación con navegación y manejo de estados.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estado para almacenar la lista de personajes obtenidos de la API\n  const [characters, setCharacters] = useState([]);\n\n  /**\r\n   * useEffect que se ejecuta una vez al montar el componente.\r\n   * Se encarga de obtener todos los personajes de la API de Rick and Morty.\r\n   */\n  useEffect(() => {\n    /**\r\n     * Función asincrónica que obtiene todos los personajes de la API paginada.\r\n     * Utiliza un bucle `while` para recorrer todas las páginas disponibles.\r\n     */\n    const fetchAllCharacters = async () => {\n      try {\n        let allData = []; // Array para almacenar todos los personajes\n        let page = 1; // Página inicial\n        let totalPages = 1; // Total de páginas (se actualizará después de la primera solicitud)\n\n        while (page <= totalPages) {\n          // Realiza la solicitud a la API con la página actual\n          const res = await fetch(`https://rickandmortyapi.com/api/character?page=${page}`);\n          const data = await res.json();\n\n          // Agrega los personajes de la página actual al array\n          allData = [...allData, ...data.results];\n\n          // Actualiza el total de páginas con el valor de la API\n          totalPages = data.info.pages;\n          page++; // Avanza a la siguiente página\n        }\n\n        // Almacena todos los personajes en el estado\n        setCharacters(allData);\n      } catch (error) {\n        console.error(\"Error fetching characters:\", error);\n      }\n    };\n    fetchAllCharacters();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            characters: characters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/character/:id\",\n          element: /*#__PURE__*/_jsxDEV(CharacterDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/episodes\",\n          element: /*#__PURE__*/_jsxDEV(UnderConstruction, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/locations\",\n          element: /*#__PURE__*/_jsxDEV(UnderConstruction, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Lpb9AbqKJ07+xuj4aZ1twNw87e0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Router","Routes","Route","Header","Home","CharacterDetail","UnderConstruction","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","fetchAllCharacters","allData","page","totalPages","res","fetch","data","json","results","info","pages","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/krist/Desktop/Cristian/Visual Studio Code/RickandMorty API/rick-and-morty-api/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport Home from \"./pages/Home\";\r\nimport CharacterDetail from \"./pages/CharacterDetail\";\r\nimport UnderConstruction from \"./components/UnderConstruction\";\r\n\r\n/**\r\n * Componente principal de la aplicación.\r\n * Administra las rutas y la obtención de datos de la API de Rick and Morty.\r\n * @returns {JSX.Element} Estructura de la aplicación con navegación y manejo de estados.\r\n */\r\nfunction App() {\r\n  // Estado para almacenar la lista de personajes obtenidos de la API\r\n  const [characters, setCharacters] = useState([]);\r\n\r\n  /**\r\n   * useEffect que se ejecuta una vez al montar el componente.\r\n   * Se encarga de obtener todos los personajes de la API de Rick and Morty.\r\n   */\r\n  useEffect(() => {\r\n    /**\r\n     * Función asincrónica que obtiene todos los personajes de la API paginada.\r\n     * Utiliza un bucle `while` para recorrer todas las páginas disponibles.\r\n     */\r\n    const fetchAllCharacters = async () => {\r\n      try {\r\n        let allData = []; // Array para almacenar todos los personajes\r\n        let page = 1; // Página inicial\r\n        let totalPages = 1; // Total de páginas (se actualizará después de la primera solicitud)\r\n\r\n        while (page <= totalPages) {\r\n          // Realiza la solicitud a la API con la página actual\r\n          const res = await fetch(`https://rickandmortyapi.com/api/character?page=${page}`);\r\n          const data = await res.json();\r\n\r\n          // Agrega los personajes de la página actual al array\r\n          allData = [...allData, ...data.results];\r\n\r\n          // Actualiza el total de páginas con el valor de la API\r\n          totalPages = data.info.pages;\r\n          page++; // Avanza a la siguiente página\r\n        }\r\n\r\n        // Almacena todos los personajes en el estado\r\n        setCharacters(allData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching characters:\", error);\r\n      }\r\n    };\r\n\r\n    fetchAllCharacters();\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n\r\n        {/* Definición de las rutas de la aplicación */}\r\n        <Routes>\r\n          {/* Página principal que muestra la lista de personajes */}\r\n          <Route path=\"/\" element={<Home characters={characters} />} />\r\n          \r\n          {/* Página de detalles de un personaje */}\r\n          <Route path=\"/character/:id\" element={<CharacterDetail />} />\r\n          \r\n          {/* Secciones en construcción */}\r\n          <Route path=\"/episodes\" element={<UnderConstruction />} />\r\n          <Route path=\"/locations\" element={<UnderConstruction />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}